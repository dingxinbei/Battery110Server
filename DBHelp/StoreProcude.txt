USE [Battery110]
GO
--------------------------------1 ---------------------------------------------------
/****** Object:  StoredProcedure [dbo].[Login]    Script Date: 11/12/2012 16:58:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Dxb>
-- Create date: <2012,11,12>
-- Description:	<Description,,登录，清理过期处理中数据>
-- =============================================
Create PROCEDURE [dbo].[Login] 
	-- Add the parameters for the stored procedure here
	@Mac varchar(20),@LogId bigint=0 output,@Ip varchar(20)='0.0.0.0' output, @Port int=8888 output
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	declare @count int = 0
	select @count = COUNT(*) from dbo.ServerSetup where ServerMac = @Mac and state>-1
	if(@count > 0)
	begin
		select @Ip= IP,@Port= Port from dbo.ServerSetup where ServerMac = @Mac
		update ServerSetup set state = 1 where ServerMac = @Mac
	end
	else
	begin
		insert ServerSetup values (@Mac,@Ip,@Port,0)
	end
	insert into ServerLog values (@Mac,@Ip,@Port,getdate(),null)
	select @LogId = Scope_Identity() 
END

-Eg----------------------------------------------------
--declare @Mac varchar(20) = 'F0-4D-A2-F3-57-27',@Ip varchar(20),@Port int,@LogId bigint
--exec dbo.Login @Mac,@LogId output,@Ip output ,@Port output
--select @Mac , @LogId , @Ip ,@Port 
------------------------------------------------------


------------------------------------2---------------------------------------------------------
-- ================================================
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,DXB>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[SaveServerConfig]
	-- Add the parameters for the stored procedure here
	@Mac varchar(20),@Ip varchar(20),@Port int
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	declare @re int
	select @re = COUNT(*) from dbo.ServerSetup where ServerMac = @Mac
	if(@re > 0)
	begin
		update dbo.ServerSetup set IP = @Ip , Port = @Port where ServerMac = @Mac
	end 
	else
		insert into dbo.ServerSetup values (@Mac , @Ip , @Port , 1 )	
    
END
GO
------------------------------3----------------------------------------
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,DXB>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[LoginData]
	-- Add the parameters for the stored procedure here
	--理论上是不能超过1024的
	@data varbinary(1024),@LogId bigint,@Type bit=0,
	@No int,@TerminalNo binary(4),@Command binary(2),@infoLen int,@infodata varbinary(1024)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	--状态，-1，可转移的数据。0，新数据，1处理中的数据，2处理过的数据，3错误数据……
	SET NOCOUNT ON;
	insert into dbo.LogData values (@data,GETDATE(),0,@Type,@LogId);
	declare @id bigint = SCOPE_IDENTITY() ;
	insert into dbo.PackData values (@id,@No,@TerminalNo,@Command,@infoLen,@infodata,GETDATE())
END
GO
--------------------------------4--------------------------------------
USE [Battery110]
GO
/****** Object:  StoredProcedure [dbo].[Register]    Script Date: 11/20/2012 14:54:12 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Dxb>
-- Create date: <2012,11,14>
-- Description:	<Description,,注册，>
-- =============================================
CREATE PROCEDURE [dbo].[Register] 
	-- Add the parameters for the stored procedure here
	@mac varchar(20),@Phone varchar(20),@CarNetType bit,@RomVersion varchar(10),@TerminalNo binary(4) output,@ReReg bit output
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	declare @Have int;
	select @Have = COUNT(*) from dbo.TerminalSetupInfo where Phone = @Phone;
	if @Have > 0 
	begin
		select @TerminalNo = TerminalNo from dbo.TerminalSetupInfo where Phone = @Phone;
		set @ReReg = 1;
	end 
	else
	begin
		insert into dbo.TerminalSetupInfo values (null,@CarNetType,@RomVersion,@Phone,null,0,getdate(),@mac,0)
		set @TerminalNo = CONVERT(binary(4),CONVERT(bigint,SCOPE_IDENTITY()));
		update dbo.TerminalSetupInfo set TerminalNo = @TerminalNo  where Phone = @Phone;
		set @ReReg = 0;
	end 
END